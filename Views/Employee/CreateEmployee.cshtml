@model MyMCE.Models.Domain.Employee.tbl_MCE_Employee

@{
    /**/

    ViewBag.Title = "Create Employee";
    Layout = "~/Views/Shared/_LayoutAdminLte.cshtml";
}
<script src="~/adminlte/js/sweet-alert.init.js"></script>
<script src="~/adminlte/js/sweetalert.min.js"></script>
<script src="~/adminlte/js/sweetalert2.all.min.js"></script>
<script src="~/Scripts/jquery-3.5.1.min.js"></script>

@section Scripts {
    <script type="text/javascript" language="javascript">
        $(function () {

            $("#btnSubmit").click(function () {

                if (confirm("Are you sure you want to Save changes?")) {
                    return true;
                } else {
                    return false;
                }

            });
        });
    </script>
}
@if (TempData["Success"] != null)
{
    <script type="text/javascript">
                            swal.fire(
                                {
                                    title: '@TempData["Success"]',
                                    type: 'success'
                                });
    </script>

}

<script type="text/javascript">
    $(document).ready(function () {
        $("#intCourseID").change(function () {
            debugger
            $("#intBranchID").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetBranch")',

                    dataType: 'json',
                    data: { intCourseID: $(this).val() },
                    success: function (classesData) {
                        var select = $("#intBranchID");
                        select.empty();
                        select.append($('<option/>', {
                            value: 0,
                            text: "Select a Branch"
                        }));
                        $.each(classesData, function (index, itemData) {
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text
                            }));
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
                return false;
            });
    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <!-- Main content -->
    <section class="content">

        <div class="row">

            <div class="col-12 col-sm-12">
                <div class="card card-primary card-outline card-outline-tabs">
                    <div class="card-header p-0 border-bottom-0">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a class="nav-link active">New Employee</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Employee/EmployeeDataTable">View Employee</a>
                            </li>


                        </ul>
                    </div>
                    <!-- card-body -->
                    <div class="card-body">
                        <div class="tab-content">
                            <div class="active tab-pane" id="Add">
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.vchEmployeeCode, htmlAttributes: new { @class = "control-label col-md-6" })
                                            @Html.EditorFor(model => model.vchEmployeeCode, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.vchEmployeeCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.vchUserName, htmlAttributes: new { @class = "control-label col-md-6" })
                                            @Html.EditorFor(model => model.vchUserName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.vchUserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.vchName, htmlAttributes: new { @class = "control-label col-md-6" })
                                            @Html.EditorFor(model => model.vchName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.vchName, "", new { @class = "text-danger" })


                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.vchGender, htmlAttributes: new { @class = "control-label col-md-4" })

                                            @Html.DropDownListFor(Model => Model.vchGender, new SelectList(ViewBag.gender as System.Collections.IEnumerable, "vchValue", "vchText"),
                                                               "Select a Gender", htmlAttributes: new { @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.vchGender, "", new { @class = "text-danger" })


                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intDesignationID, htmlAttributes: new { @class = "control-label col-md-6" })

                                            @Html.DropDownListFor(Model => Model.intDesignationID, new SelectList(ViewBag.designationList as System.Collections.IEnumerable, "intDesignationID", "vchDesignation"),
                                                            "Select a Designation", htmlAttributes: new { @class = "form-control " })

                                            @Html.ValidationMessageFor(model => model.intDesignationID, "", new { @class = "text-danger" })


                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.dtDOJ, htmlAttributes: new { @class = "control-label col-md-8" })

                                            @Html.EditorFor(model => model.dtDOJ, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.dtDOJ, "", new { @class = "text-danger" })


                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intCourseID, htmlAttributes: new { @class = "control-label col-md-4" })

                                            @Html.DropDownListFor(Model => Model.intCourseID, new SelectList(ViewBag.courseList as System.Collections.IEnumerable, "intCourseID", "vchCourseName"),
                                                               "Select a Course", htmlAttributes: new { @class = "form-control " })

                                            @Html.ValidationMessageFor(model => model.intCourseID, "", new { @class = "text-danger" })

                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intBranchID, htmlAttributes: new { @class = "control-label col-md-4" })

                                            @Html.DropDownListFor(Model => Model.intBranchID, new SelectList(Enumerable.Empty<SelectListItem>(), "intBranchID", "vchBranchName"),
                                                                                   "Select a Branch", htmlAttributes: new { @class = "form-control " })
                                            @*@Html.DropDownListFor(Model => Model.intBranchID, new SelectList(ViewBag.branchList as System.Collections.IEnumerable, "intBranchID", "vchBranchName"),
                                                "Select a branch", htmlAttributes: new { @class = "form-control form-control-sm" })*@

                                            @Html.ValidationMessageFor(model => model.intBranchID, "", new { @class = "text-danger" })

                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intJoinCategoryID, htmlAttributes: new { @class = "control-label col-md-6" })

                                            @Html.DropDownListFor(Model => Model.intJoinCategoryID, new SelectList(ViewBag.joinCategoryList as System.Collections.IEnumerable, "intJoinCategoryID", "vchJoinCategoryType"),
                                                               "Select a category", htmlAttributes: new { @class = "form-control " })
                                            @Html.ValidationMessageFor(model => model.intJoinCategoryID, "", new { @class = "text-danger" })


                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intRAID, htmlAttributes: new { @class = "control-label col-md-10" })
                                            @Html.DropDownListFor(Model => Model.intRAID, new SelectList(ViewBag.employeeList as System.Collections.IEnumerable, "intID", "vchName"),
                                                  "Select a Reporting authority", htmlAttributes: new { @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.intRAID, "", new { @class = "text-danger" })


                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intApprovalByID, htmlAttributes: new { @class = "control-label col-md-6" })

                                            @Html.DropDownListFor(Model => Model.intApprovalByID, new SelectList(ViewBag.employeeList as System.Collections.IEnumerable, "intID", "vchName"),
                                                      "Select approved by", htmlAttributes: new { @class = "form-control " })
                                            @Html.ValidationMessageFor(model => model.intApprovalByID, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intLevelID, htmlAttributes: new { @class = "control-label col-md-4" })

                                            @Html.DropDownListFor(Model => Model.intLevelID, new SelectList(ViewBag.levelList as System.Collections.IEnumerable, "intLevelID", "vchLevelName"),
                                                  "Select level", htmlAttributes: new { @class = "form-control " })

                                            @Html.ValidationMessageFor(model => model.intLevelID, "", new { @class = "text-danger" })

                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.intRoleID, htmlAttributes: new { @class = "control-label col-md-4" })

                                            @Html.DropDownListFor(Model => Model.intRoleID, new SelectList(ViewBag.roleList as System.Collections.IEnumerable, "intRoleID", "vchRoleName"),
                                                           "Select a Role", htmlAttributes: new { @class = "form-control " })

                                            @Html.ValidationMessageFor(model => model.intRoleID, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.vchHighestQualification, htmlAttributes: new { @class = "control-label col-md-8" })

                                            @Html.EditorFor(model => model.vchHighestQualification, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.vchHighestQualification, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.decExperienceAsJoiningDate, htmlAttributes: new { @class = "control-label col-md-10" })

                                            @Html.EditorFor(model => model.decExperienceAsJoiningDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.decExperienceAsJoiningDate, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">

                                            @Html.LabelFor(model => model.vchRemarks, htmlAttributes: new { @class = "control-label col-md-6" })

                                            @Html.EditorFor(model => model.vchRemarks, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.vchRemarks, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                </div>

                                <div class="row">
                                    <div class="col-sm-3">
                                        <input type="submit" value="Create" id="btnSubmit" class="btn btn-info" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-3">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <!-- /.card -->
                </div>
            </div>
        </div>

    </section>


}


